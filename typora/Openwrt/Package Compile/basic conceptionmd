

# 1. opkg:

## 1.1. 基本概念

​		opkg = Openwrt  Package   
​		一个轻量级软件包管理系统，用来管理软件包的下载、安装、升级、卸载和查询等。  
​		一个针对根文件系统全功能的软件包管理器，不仅在独立目录安装软件，还可安装内核模块和驱动等。  
​		安装时自动解决包依赖关系，若错误则中止安装。

## 1.2.命令与选项

### 1.2.1. 命令

| 命令                           | 功能                                                         | 备注 |
| ------------------------------ | ------------------------------------------------------------ | ---- |
| opkg --help                    | 查看帮助                                                     |      |
| opkg update                    | 软件列表更新                                                 |      |
| opkg install  <软件名>         | 安装软件，若有依赖包则会自动安装                             |      |
| opkg remove <软件名>           | 卸载软件，依赖包不会卸载，需要加参数--automove               |      |
| opkg upgrade <软件名>          | 升级软件，若软件没有安装则等效于install,若有多个包则包之间由空格分开 |      |
| opkg list                      | 列出可使用的软件包                                           |      |
| opkg list-installed            | 列出已安装的软件包                                           |      |
| opkg list-changed-conffiles    | 列出用户修改过的配置文件                                     |      |
| opkg file <软件名>             | 列出该软件包的所有文件（该包需已安装）                       |      |
| opkg search <文件绝对路径>     | 列出该文件的所属软件包                                       |      |
| opkg find <正则表达式软件名>   | 列出查找的软件包                                             |      |
| opkg info                      | 显示已安装的软件包信息                                       |      |
| opkg print-architecture        | 列出软件包的架构                                             |      |
| opkg whatdepends [-A] [软件名] | 列出软件包的依赖                                             |      |

### 1.2.2. 命令选项

| 选项              | 功能                                       | 备注 |
| ----------------- | ------------------------------------------ | ---- |
| -A                | 查询所有软件包                             |      |
| -d <路径>         | 指定软件包安装根目录                       |      |
| -f <文件>         | 指定配置文件，不指定则默认为/etc/opkg.conf |      |
| --nodeps          | 不按照依赖来安装，只安装软件包自己         |      |
| --antoremove      | 自动卸载软件包括安装时自动安装的依赖包     |      |
| --force-reinstall | 强制重新安装软件包                         |      |
| --force-dep       |                                            |      |

### 1.2.3. 常用命令组合

`opkg install <某.ipk> --nodeps --force-dep`



## 1.3.相关路径

​		配置文件路径：/etc/opkg.conf   
​				格式：dest 目的地址名  目录路径(从根目录开始)  
​				举例：dest usb /opt  
​		软件仓库的软件包信息路径：/var/opkg-list  
​		软件安装信息路径：/usr/lib/opkg  



# 2. ipk:

## 2.1.基本概念

​		一种软件包格式，内容是预编译完成的二进制文件。  
​		本质是tar.gz压缩文件，可使用tar命令解压查看内容。     
​		工程路径：`package/`下包含Feeds源软件包的软链接。

## 2.2.形式：  

### 2.2.1.安装形式：

​		(1) 在线安装：  
​		(2) 本地安装：   
​	 		**<1>方法一：**`opkg install <*.ipk>`  
​			 **<2>方法二：**  
​				步骤一：将文件放在根目录，利用`tar -zxvf xxx.ipk`解压ipk包，得到：  
​						①debian-binary 		纯文本文件  
​						②data.tar.gz	 	 	 解压后包含软件的可执行程序  
​						③contorl.tar.gz		  解压后包含很多控制文件,如：  			

​			control 	 控制文件，包含软件包名称、版本、依赖关系和所属分类等信息      
​			conffiles
  配置文件，内容包含该软件的配置文件列表，一个文件占一行      
​			preinst
​     安装文件之前执行脚本  
​            postinst
   安装文件之后执行脚本，例如安装之后设置用户及启动程序等  
​			prerm	
  卸载之前执行的脚本，例如卸载之前首先结束运行的程序进程  
​            postrm
​     卸载之后执行的脚本

​				步骤二：再次利用 `tar -zxvf data.tar.gz`解压data压缩包

### 2.2.2.软件包形式：

​		根据软件包是否编译进固件：  
​				①与固件捆绑：直接捆绑在固件中，无需独立安装  
​				②模块软件包：不捆绑在固件中，需使用OPKG安装

### 2.2.3.软件包构建组成：

​		src/						**源文件目录**：包含源文件和头文件及Makefile文件，编译出可执行程序。  
​		Makefile:			  **软件包的菜单和编译方法**    
​		patches/			   **补丁目录**（可选）：存放优化可执行程序的补丁文件。若存在则编译程序会在下载和解压完源码后自动执行脚本对源代码打补丁  
​		files/					  **配置目录**（可选）：存放默认配置文件和初始化启动脚本。

